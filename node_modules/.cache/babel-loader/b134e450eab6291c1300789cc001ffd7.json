{"remainingRequest":"D:\\gitProject\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\gitProject\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\gitProject\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gitProject\\vue-element-admin\\src\\components\\page\\tree3.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\gitProject\\vue-element-admin\\src\\components\\page\\tree3.vue","mtime":1555400971104},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555569289417},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1555569289133},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555569289417},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1555569294848}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _JSON$stringify from \"D:\\\\gitProject\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar id = 1000;\nexport default {\n  data: function data() {\n    var data = [{\n      id: 1,\n      label: \"一级 1\",\n      children: [{\n        id: 4,\n        label: \"二级 1-1\",\n        children: [{\n          id: 9,\n          label: \"三级 1-1-1\"\n        }, {\n          id: 10,\n          label: \"三级 1-1-2\"\n        }]\n      }]\n    }, {\n      id: 2,\n      label: \"一级 2\",\n      children: [{\n        id: 5,\n        label: \"二级 2-1\"\n      }, {\n        id: 6,\n        label: \"二级 2-2\"\n      }]\n    }, {\n      id: 3,\n      label: \"一级 3\",\n      children: [{\n        id: 7,\n        label: \"二级 3-1\"\n      }, {\n        id: 8,\n        label: \"二级 3-2\"\n      }]\n    }];\n    return {\n      data4: JSON.parse(_JSON$stringify(data)),\n      data5: JSON.parse(_JSON$stringify(data)),\n      data6: [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 4,\n          label: '二级 1-1',\n          children: [{\n            id: 9,\n            label: '三级 1-1-1'\n          }, {\n            id: 10,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 6,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 7,\n          label: '二级 3-1'\n        }, {\n          id: 8,\n          label: '二级 3-2',\n          children: [{\n            id: 11,\n            label: '三级 3-2-1'\n          }, {\n            id: 12,\n            label: '三级 3-2-2'\n          }, {\n            id: 13,\n            label: '三级 3-2-3'\n          }]\n        }]\n      }]\n    };\n  },\n  methods: {\n    append: function append(data) {\n      var newChild = {\n        id: id++,\n        label: \"testtest\",\n        children: []\n      };\n\n      if (!data.children) {\n        this.$set(data, \"children\", []);\n      }\n\n      data.children.push(newChild);\n    },\n    remove: function remove(node, data) {\n      var parent = node.parent;\n      var children = parent.data.children || parent.data;\n      var index = children.findIndex(function (d) {\n        return d.id === data.id;\n      });\n      children.splice(index, 1);\n    },\n    renderContent: function renderContent(h, _ref) {\n      var _this = this;\n\n      var node = _ref.node,\n          data = _ref.data,\n          store = _ref.store;\n      return h(\"span\", {\n        \"class\": \"custom-tree-node\"\n      }, [h(\"span\", [node.label]), h(\"span\", [h(\"el-button\", {\n        attrs: {\n          size: \"mini\",\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.append(data);\n          }\n        }\n      }, [\"Append\"]), h(\"el-button\", {\n        attrs: {\n          size: \"mini\",\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.remove(node, data);\n          }\n        }\n      }, [\"Delete\"])])]);\n    },\n    handleDragStart: function handleDragStart(node, ev) {\n      console.log('drag start', node);\n    },\n    handleDragEnter: function handleDragEnter(draggingNode, dropNode, ev) {\n      console.log('tree drag enter: ', dropNode.label);\n    },\n    handleDragLeave: function handleDragLeave(draggingNode, dropNode, ev) {\n      console.log('tree drag leave: ', dropNode.label);\n    },\n    handleDragOver: function handleDragOver(draggingNode, dropNode, ev) {\n      console.log('tree drag over: ', dropNode.label);\n    },\n    handleDragEnd: function handleDragEnd(draggingNode, dropNode, dropType, ev) {\n      console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n    },\n    handleDrop: function handleDrop(draggingNode, dropNode, dropType, ev) {\n      console.log('tree drop: ', dropNode.label, dropType);\n    },\n    allowDrop: function allowDrop(draggingNode, dropNode, type) {\n      if (dropNode.data.label === '二级 3-1') {\n        return type !== 'inner';\n      } else {\n        return true;\n      }\n    },\n    allowDrag: function allowDrag(draggingNode) {\n      return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\n    }\n  }\n};",{"version":3,"sources":["tree3.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <div class=\"custom-tree-container\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :span=\"12\">\r\n          <div class=\"block\">\r\n            <p>使用 render-content</p>\r\n            <el-tree\r\n              :data=\"data4\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              default-expand-all\r\n              :expand-on-click-node=\"false\"\r\n              :render-content=\"renderContent\"\r\n            ></el-tree>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <div :span=\"12\" class=\"block\">\r\n            <p>使用 scoped slot</p>\r\n            <el-tree\r\n              :data=\"data5\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              default-expand-all\r\n              :expand-on-click-node=\"false\"\r\n            >\r\n              <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                <span>{{ node.label }}</span>\r\n                <span>\r\n                  <el-button type=\"text\" size=\"mini\" @click=\"() => append(data)\">Append</el-button>\r\n                  <el-button type=\"text\" size=\"mini\" @click=\"() => remove(node, data)\">Delete</el-button>\r\n                </span>\r\n              </span>\r\n            </el-tree>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n          <h4 style=\"padding:10px\">可拖拽节点</h4>\r\n        <el-tree\r\n          :data=\"data6\"\r\n          node-key=\"id\"\r\n          default-expand-all\r\n          @node-drag-start=\"handleDragStart\"\r\n          @node-drag-enter=\"handleDragEnter\"\r\n          @node-drag-leave=\"handleDragLeave\"\r\n          @node-drag-over=\"handleDragOver\"\r\n          @node-drag-end=\"handleDragEnd\"\r\n          @node-drop=\"handleDrop\"\r\n          draggable\r\n          :allow-drop=\"allowDrop\"\r\n          :allow-drag=\"allowDrag\"\r\n        ></el-tree>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nlet id = 1000;\r\n\r\nexport default {\r\n  data() {\r\n    const data = [\r\n      {\r\n        id: 1,\r\n        label: \"一级 1\",\r\n        children: [\r\n          {\r\n            id: 4,\r\n            label: \"二级 1-1\",\r\n            children: [\r\n              {\r\n                id: 9,\r\n                label: \"三级 1-1-1\"\r\n              },\r\n              {\r\n                id: 10,\r\n                label: \"三级 1-1-2\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"一级 2\",\r\n        children: [\r\n          {\r\n            id: 5,\r\n            label: \"二级 2-1\"\r\n          },\r\n          {\r\n            id: 6,\r\n            label: \"二级 2-2\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"一级 3\",\r\n        children: [\r\n          {\r\n            id: 7,\r\n            label: \"二级 3-1\"\r\n          },\r\n          {\r\n            id: 8,\r\n            label: \"二级 3-2\"\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    return {\r\n      data4: JSON.parse(JSON.stringify(data)),\r\n      data5: JSON.parse(JSON.stringify(data)),\r\n      data6: [{\r\n          id: 1,\r\n          label: '一级 1',\r\n          children: [{\r\n            id: 4,\r\n            label: '二级 1-1',\r\n            children: [{\r\n              id: 9,\r\n              label: '三级 1-1-1'\r\n            }, {\r\n              id: 10,\r\n              label: '三级 1-1-2'\r\n            }]\r\n          }]\r\n        }, {\r\n          id: 2,\r\n          label: '一级 2',\r\n          children: [{\r\n            id: 5,\r\n            label: '二级 2-1'\r\n          }, {\r\n            id: 6,\r\n            label: '二级 2-2'\r\n          }]\r\n        }, {\r\n          id: 3,\r\n          label: '一级 3',\r\n          children: [{\r\n            id: 7,\r\n            label: '二级 3-1'\r\n          }, {\r\n            id: 8,\r\n            label: '二级 3-2',\r\n            children: [{\r\n             id: 11,\r\n              label: '三级 3-2-1'\r\n            }, {\r\n              id: 12,\r\n              label: '三级 3-2-2'\r\n            }, {\r\n              id: 13,\r\n              label: '三级 3-2-3'\r\n            }]\r\n          }]\r\n        }]\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    append(data) {\r\n      const newChild = { id: id++, label: \"testtest\", children: [] };\r\n      if (!data.children) {\r\n        this.$set(data, \"children\", []);\r\n      }\r\n      data.children.push(newChild);\r\n    },\r\n\r\n    remove(node, data) {\r\n      const parent = node.parent;\r\n      const children = parent.data.children || parent.data;\r\n      const index = children.findIndex(d => d.id === data.id);\r\n      children.splice(index, 1);\r\n    },\r\n\r\n    renderContent(h, { node, data, store }) {\r\n      return (\r\n        <span class=\"custom-tree-node\">\r\n          <span>{node.label}</span>\r\n          <span>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              on-click={() => this.append(data)}\r\n            >\r\n              Append\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              on-click={() => this.remove(node, data)}\r\n            >\r\n              Delete\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      );\r\n    },\r\n    handleDragStart(node, ev) {\r\n        console.log('drag start', node);\r\n      },\r\n      handleDragEnter(draggingNode, dropNode, ev) {\r\n        console.log('tree drag enter: ', dropNode.label);\r\n      },\r\n      handleDragLeave(draggingNode, dropNode, ev) {\r\n        console.log('tree drag leave: ', dropNode.label);\r\n      },\r\n      handleDragOver(draggingNode, dropNode, ev) {\r\n        console.log('tree drag over: ', dropNode.label);\r\n      },\r\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\r\n      },\r\n      handleDrop(draggingNode, dropNode, dropType, ev) {\r\n        console.log('tree drop: ', dropNode.label, dropType);\r\n      },\r\n      allowDrop(draggingNode, dropNode, type) {\r\n        if (dropNode.data.label === '二级 3-1') {\r\n          return type !== 'inner';\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      allowDrag(draggingNode) {\r\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\r\n      }\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\page"}]}