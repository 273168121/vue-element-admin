{"remainingRequest":"D:\\gitProject\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gitProject\\vue-element-admin\\src\\components\\page\\tree3.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\gitProject\\vue-element-admin\\src\\components\\page\\tree3.vue","mtime":1555400971104},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555567945525},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1555567945138},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555567945525},{"path":"D:\\gitProject\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nlet id = 1000;\r\n\r\nexport default {\r\n  data() {\r\n    const data = [\r\n      {\r\n        id: 1,\r\n        label: \"一级 1\",\r\n        children: [\r\n          {\r\n            id: 4,\r\n            label: \"二级 1-1\",\r\n            children: [\r\n              {\r\n                id: 9,\r\n                label: \"三级 1-1-1\"\r\n              },\r\n              {\r\n                id: 10,\r\n                label: \"三级 1-1-2\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"一级 2\",\r\n        children: [\r\n          {\r\n            id: 5,\r\n            label: \"二级 2-1\"\r\n          },\r\n          {\r\n            id: 6,\r\n            label: \"二级 2-2\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"一级 3\",\r\n        children: [\r\n          {\r\n            id: 7,\r\n            label: \"二级 3-1\"\r\n          },\r\n          {\r\n            id: 8,\r\n            label: \"二级 3-2\"\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    return {\r\n      data4: JSON.parse(JSON.stringify(data)),\r\n      data5: JSON.parse(JSON.stringify(data)),\r\n      data6: [{\r\n          id: 1,\r\n          label: '一级 1',\r\n          children: [{\r\n            id: 4,\r\n            label: '二级 1-1',\r\n            children: [{\r\n              id: 9,\r\n              label: '三级 1-1-1'\r\n            }, {\r\n              id: 10,\r\n              label: '三级 1-1-2'\r\n            }]\r\n          }]\r\n        }, {\r\n          id: 2,\r\n          label: '一级 2',\r\n          children: [{\r\n            id: 5,\r\n            label: '二级 2-1'\r\n          }, {\r\n            id: 6,\r\n            label: '二级 2-2'\r\n          }]\r\n        }, {\r\n          id: 3,\r\n          label: '一级 3',\r\n          children: [{\r\n            id: 7,\r\n            label: '二级 3-1'\r\n          }, {\r\n            id: 8,\r\n            label: '二级 3-2',\r\n            children: [{\r\n             id: 11,\r\n              label: '三级 3-2-1'\r\n            }, {\r\n              id: 12,\r\n              label: '三级 3-2-2'\r\n            }, {\r\n              id: 13,\r\n              label: '三级 3-2-3'\r\n            }]\r\n          }]\r\n        }]\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    append(data) {\r\n      const newChild = { id: id++, label: \"testtest\", children: [] };\r\n      if (!data.children) {\r\n        this.$set(data, \"children\", []);\r\n      }\r\n      data.children.push(newChild);\r\n    },\r\n\r\n    remove(node, data) {\r\n      const parent = node.parent;\r\n      const children = parent.data.children || parent.data;\r\n      const index = children.findIndex(d => d.id === data.id);\r\n      children.splice(index, 1);\r\n    },\r\n\r\n    renderContent(h, { node, data, store }) {\r\n      return (\r\n        <span class=\"custom-tree-node\">\r\n          <span>{node.label}</span>\r\n          <span>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              on-click={() => this.append(data)}\r\n            >\r\n              Append\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              on-click={() => this.remove(node, data)}\r\n            >\r\n              Delete\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      );\r\n    },\r\n    handleDragStart(node, ev) {\r\n        console.log('drag start', node);\r\n      },\r\n      handleDragEnter(draggingNode, dropNode, ev) {\r\n        console.log('tree drag enter: ', dropNode.label);\r\n      },\r\n      handleDragLeave(draggingNode, dropNode, ev) {\r\n        console.log('tree drag leave: ', dropNode.label);\r\n      },\r\n      handleDragOver(draggingNode, dropNode, ev) {\r\n        console.log('tree drag over: ', dropNode.label);\r\n      },\r\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\r\n      },\r\n      handleDrop(draggingNode, dropNode, dropType, ev) {\r\n        console.log('tree drop: ', dropNode.label, dropType);\r\n      },\r\n      allowDrop(draggingNode, dropNode, type) {\r\n        if (dropNode.data.label === '二级 3-1') {\r\n          return type !== 'inner';\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      allowDrag(draggingNode) {\r\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\r\n      }\r\n    \r\n  }\r\n};\r\n",{"version":3,"sources":["tree3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"tree3.vue","sourceRoot":"src\\components\\page","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <div class=\"custom-tree-container\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :span=\"12\">\r\n          <div class=\"block\">\r\n            <p>使用 render-content</p>\r\n            <el-tree\r\n              :data=\"data4\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              default-expand-all\r\n              :expand-on-click-node=\"false\"\r\n              :render-content=\"renderContent\"\r\n            ></el-tree>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <div :span=\"12\" class=\"block\">\r\n            <p>使用 scoped slot</p>\r\n            <el-tree\r\n              :data=\"data5\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              default-expand-all\r\n              :expand-on-click-node=\"false\"\r\n            >\r\n              <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                <span>{{ node.label }}</span>\r\n                <span>\r\n                  <el-button type=\"text\" size=\"mini\" @click=\"() => append(data)\">Append</el-button>\r\n                  <el-button type=\"text\" size=\"mini\" @click=\"() => remove(node, data)\">Delete</el-button>\r\n                </span>\r\n              </span>\r\n            </el-tree>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n          <h4 style=\"padding:10px\">可拖拽节点</h4>\r\n        <el-tree\r\n          :data=\"data6\"\r\n          node-key=\"id\"\r\n          default-expand-all\r\n          @node-drag-start=\"handleDragStart\"\r\n          @node-drag-enter=\"handleDragEnter\"\r\n          @node-drag-leave=\"handleDragLeave\"\r\n          @node-drag-over=\"handleDragOver\"\r\n          @node-drag-end=\"handleDragEnd\"\r\n          @node-drop=\"handleDrop\"\r\n          draggable\r\n          :allow-drop=\"allowDrop\"\r\n          :allow-drag=\"allowDrag\"\r\n        ></el-tree>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nlet id = 1000;\r\n\r\nexport default {\r\n  data() {\r\n    const data = [\r\n      {\r\n        id: 1,\r\n        label: \"一级 1\",\r\n        children: [\r\n          {\r\n            id: 4,\r\n            label: \"二级 1-1\",\r\n            children: [\r\n              {\r\n                id: 9,\r\n                label: \"三级 1-1-1\"\r\n              },\r\n              {\r\n                id: 10,\r\n                label: \"三级 1-1-2\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"一级 2\",\r\n        children: [\r\n          {\r\n            id: 5,\r\n            label: \"二级 2-1\"\r\n          },\r\n          {\r\n            id: 6,\r\n            label: \"二级 2-2\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"一级 3\",\r\n        children: [\r\n          {\r\n            id: 7,\r\n            label: \"二级 3-1\"\r\n          },\r\n          {\r\n            id: 8,\r\n            label: \"二级 3-2\"\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    return {\r\n      data4: JSON.parse(JSON.stringify(data)),\r\n      data5: JSON.parse(JSON.stringify(data)),\r\n      data6: [{\r\n          id: 1,\r\n          label: '一级 1',\r\n          children: [{\r\n            id: 4,\r\n            label: '二级 1-1',\r\n            children: [{\r\n              id: 9,\r\n              label: '三级 1-1-1'\r\n            }, {\r\n              id: 10,\r\n              label: '三级 1-1-2'\r\n            }]\r\n          }]\r\n        }, {\r\n          id: 2,\r\n          label: '一级 2',\r\n          children: [{\r\n            id: 5,\r\n            label: '二级 2-1'\r\n          }, {\r\n            id: 6,\r\n            label: '二级 2-2'\r\n          }]\r\n        }, {\r\n          id: 3,\r\n          label: '一级 3',\r\n          children: [{\r\n            id: 7,\r\n            label: '二级 3-1'\r\n          }, {\r\n            id: 8,\r\n            label: '二级 3-2',\r\n            children: [{\r\n             id: 11,\r\n              label: '三级 3-2-1'\r\n            }, {\r\n              id: 12,\r\n              label: '三级 3-2-2'\r\n            }, {\r\n              id: 13,\r\n              label: '三级 3-2-3'\r\n            }]\r\n          }]\r\n        }]\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    append(data) {\r\n      const newChild = { id: id++, label: \"testtest\", children: [] };\r\n      if (!data.children) {\r\n        this.$set(data, \"children\", []);\r\n      }\r\n      data.children.push(newChild);\r\n    },\r\n\r\n    remove(node, data) {\r\n      const parent = node.parent;\r\n      const children = parent.data.children || parent.data;\r\n      const index = children.findIndex(d => d.id === data.id);\r\n      children.splice(index, 1);\r\n    },\r\n\r\n    renderContent(h, { node, data, store }) {\r\n      return (\r\n        <span class=\"custom-tree-node\">\r\n          <span>{node.label}</span>\r\n          <span>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              on-click={() => this.append(data)}\r\n            >\r\n              Append\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              on-click={() => this.remove(node, data)}\r\n            >\r\n              Delete\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      );\r\n    },\r\n    handleDragStart(node, ev) {\r\n        console.log('drag start', node);\r\n      },\r\n      handleDragEnter(draggingNode, dropNode, ev) {\r\n        console.log('tree drag enter: ', dropNode.label);\r\n      },\r\n      handleDragLeave(draggingNode, dropNode, ev) {\r\n        console.log('tree drag leave: ', dropNode.label);\r\n      },\r\n      handleDragOver(draggingNode, dropNode, ev) {\r\n        console.log('tree drag over: ', dropNode.label);\r\n      },\r\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\r\n      },\r\n      handleDrop(draggingNode, dropNode, dropType, ev) {\r\n        console.log('tree drop: ', dropNode.label, dropType);\r\n      },\r\n      allowDrop(draggingNode, dropNode, type) {\r\n        if (dropNode.data.label === '二级 3-1') {\r\n          return type !== 'inner';\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      allowDrag(draggingNode) {\r\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\r\n      }\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;\r\n}\r\n</style>"]}]}